<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Full Object Report
</title>
<link href="LightBlue_Theme.css" type="text/css" rel="stylesheet">
</head>
<!--This file has been automatically generated by PowerDesigner.-->
<body>
<h2>
<a name="6">Class Arbol</a> 
</h2>
<h3>
<a name="9">Code preview of the class Arbol</a> 
</h3>
<table class="Text" border="1" cellpadding="3" cellspacing="1" width="100%"><tr><td>
<p align="left">//----------------------------------------------------------------------<br />
// C++.header<br />
//----------------------------------------------------------------------<br />
<br />
/***********************************************************************<br />
 * Module:  Arbol.h<br />
 * Author:  Patricio<br />
 * Modified: viernes, 22 de julio de 2022 4:27:51<br />
 * Purpose: Declaration of the class Arbol<br />
 ***********************************************************************/<br />
<br />
#if !defined(__ArbolTernario_Arbol_h)<br />
#define __ArbolTernario_Arbol_h<br />
<br />
#include &lt;Nodo.h&gt;<br />
<br />
class Arbol<br />
{<br />
public:<br />
   void insert_node(char* s, Nodo** root);<br />
   void display(Nodo* root, char* str, int level);<br />
   int isLeaf(Nodo* root);<br />
   int isFreeNode(Nodo* root);<br />
   int delete_node(Nodo* root, char* str, int level, int n);<br />
   void traverseTSTUtil(Nodo* root, char* buffer, int depth);<br />
   void traverseTST(Nodo* root);<br />
   int searchTST(Nodo* root, char* word);<br />
<br />
protected:<br />
private:<br />
<br />
};<br />
<br />
#endif<br />
<br />
//----------------------------------------------------------------------<br />
// C++.source<br />
//----------------------------------------------------------------------<br />
<br />
/***********************************************************************<br />
 * Module:  Arbol.cpp<br />
 * Author:  Patricio<br />
 * Modified: viernes, 22 de julio de 2022 4:27:51<br />
 * Purpose: Implementation of the class Arbol<br />
 ***********************************************************************/<br />
<br />
#include &quot;Arbol.h&quot;<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::insert_node(char* s, Nodo** root)<br />
// Purpose:    Implementation of Arbol::insert_node()<br />
// Parameters:<br />
// - s<br />
// - root<br />
// Return:     void<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
void Arbol::insert_node(char* s, Nodo** root)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::display(Nodo* root, char* str, int level)<br />
// Purpose:    Implementation of Arbol::display()<br />
// Parameters:<br />
// - root<br />
// - str<br />
// - level<br />
// Return:     void<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
void Arbol::display(Nodo* root, char* str, int level)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::isLeaf(Nodo* root)<br />
// Purpose:    Implementation of Arbol::isLeaf()<br />
// Parameters:<br />
// - root<br />
// Return:     int<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
int Arbol::isLeaf(Nodo* root)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::isFreeNode(Nodo* root)<br />
// Purpose:    Implementation of Arbol::isFreeNode()<br />
// Parameters:<br />
// - root<br />
// Return:     int<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
int Arbol::isFreeNode(Nodo* root)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::delete_node(Nodo* root, char* str, int level, int n)<br />
// Purpose:    Implementation of Arbol::delete_node()<br />
// Parameters:<br />
// - root<br />
// - str<br />
// - level<br />
// - n<br />
// Return:     int<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
int Arbol::delete_node(Nodo* root, char* str, int level, int n)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::traverseTSTUtil(Nodo* root, char* buffer, int depth)<br />
// Purpose:    Implementation of Arbol::traverseTSTUtil()<br />
// Parameters:<br />
// - root<br />
// - buffer<br />
// - depth<br />
// Return:     void<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
void Arbol::traverseTSTUtil(Nodo* root, char* buffer, int depth)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::traverseTST(Nodo* root)<br />
// Purpose:    Implementation of Arbol::traverseTST()<br />
// Parameters:<br />
// - root<br />
// Return:     void<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
void Arbol::traverseTST(Nodo* root)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />
////////////////////////////////////////////////////////////////////////<br />
// Name:       Arbol::searchTST(Nodo* root, char* word)<br />
// Purpose:    Implementation of Arbol::searchTST()<br />
// Parameters:<br />
// - root<br />
// - word<br />
// Return:     int<br />
////////////////////////////////////////////////////////////////////////<br />
<br />
int Arbol::searchTST(Nodo* root, char* word)<br />
{<br />
   // TODO : implement<br />
}<br />
<br />

</p>
</td></tr>
</table><br />
<hr />
<table><tr>
<td><table class="NavGroup"><tr><td><a class="NavButton" href="Full6.htm">Previous</a></td></tr></table></td>
<td width=4></td>
<td><table class="NavGroup"><tr><td><a class="NavButton" href="Home_LightBlue.html">Home</a></td></tr></table></td>
<td width=4></td>
<td><table class="NavGroup"><tr><td><a class="NavButton" href="Full8.htm">Next</a></td></tr></table></td></tr></table>
<br />
<br />
</body>
</html>
